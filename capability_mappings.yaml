# KSI Event â†’ Capability Mapping
# Central source of truth for what events belong to which capabilities

version: "1.0"
description: "Declarative mapping of events to capabilities and their relationships"

# Capability definitions
capabilities:
  # Essential capabilities every agent needs
  base:
    description: "Core system access and essential communication"
    events:
      # Core system access
      - "system:health"
      - "system:help"
      - "system:discover"
      # Essential agent communication (CRITICAL for all agents)
      - "agent:status"        # Agents must report their status
      - "completion:async"    # Agents must be able to communicate
      # Basic monitoring
      - "monitor:log"         # Agents should log their activity
      - "monitor:event"       # Agents can report events
      # Read-only state access for context
      - "state:get"           # Read state for context
      - "state:entity:get"    # Read entity state (needed for routing checks)
    always_enabled: true
    
  # State management capabilities
  state_read:
    description: "Read access to shared state"
    events:
      - "state:get"
      - "state:list"
      - "state:exists"
      - "state:entity:get"
      - "state:entity:query"
      
  state_write:
    description: "Write access to shared state"
    requires: ["state_read"]
    events:
      - "state:set"
      - "state:delete"
      - "state:clear"
      - "state:entity:create"
      - "state:entity:update"
      - "state:entity:delete"
      - "state:entity:bulk_create"
      
  # Async state queues
  async_state_read:
    description: "Read from async queues"
    events:
      - "async_state:pop"
      - "async_state:peek"
      - "async_state:queue_length"
      
  async_state_write:
    description: "Write to async queues"
    requires: ["async_state_read"]
    events:
      - "async_state:push"
      
  # Inter-agent messaging
  agent_messaging:
    description: "Agent communication via message bus"
    events:
      - "message:subscribe"
      - "message:unsubscribe"
      - "message:publish"
      - "message:subscriptions"
      - "agent:send_message"
      - "conversation:active"  # See who's talking
      
  # Agent lifecycle management
  spawn_agents:
    description: "Create and manage child agents"
    requires: ["agent_messaging"]  # Need messaging for coordination
    events:
      - "agent:spawn"
      - "agent:terminate"
      - "agent:list"
      - "agent:status"
      - "agent:restart"
    resource_limits:
      max_children: 5
      max_depth: 2
      
  # Conversation management
  conversation_management:
    description: "Create and manage conversations"
    events:
      - "conversation:create"
      - "conversation:list"
      - "conversation:search"
      - "conversation:acquire_lock"
      - "conversation:release_lock"
      
  # Completion management
  completion_management:
    description: "Submit and monitor completions"
    events:
      - "completion:async"
      - "completion:status"
      - "completion:cancel"
      - "completion:queue_status"
      
  # Monitoring and introspection
  system_monitoring:
    description: "Monitor system state and events"
    events:
      - "monitor:get_events"
      - "monitor:get_stats"
      - "monitor:clear_log"
      - "message_bus:stats"
      
  # Composition access
  composition_access:
    description: "Read and validate compositions"
    events:
      - "composition:list"
      - "composition:get"
      - "composition:discover"
      - "composition:validate"
      
  composition_management:
    description: "Create and modify compositions"
    requires: ["composition_access"]
    events:
      - "composition:compose"
      - "composition:profile"
      - "composition:prompt"
      
  # Permission introspection
  permission_query:
    description: "Query permission system"
    events:
      - "permission:get_agent"
      - "permission:get_profile"
      - "permission:list_profiles"
      
  # File operations (if we had them as events)
  file_operations:
    description: "File system operations"
    events:
      - "file:read"
      - "file:write"
      - "file:list"
      - "file:delete"
      
  # Development tools
  development_tools:
    description: "Development and debugging"
    events:
      - "dev:checkpoint"
      - "dev:restore"

# Event patterns (for wildcard expansion)
event_patterns:
  "message:*":
    - "message:subscribe"
    - "message:unsubscribe"
    - "message:publish"
    - "message:subscriptions"
    - "message:connect"
    - "message:disconnect"
    
  "agent:*":
    - "agent:spawn"
    - "agent:terminate"
    - "agent:list"
    - "agent:status"
    - "agent:send_message"
    - "agent:restart"
    
  "state:*":
    - "state:get"
    - "state:set"
    - "state:delete"
    - "state:list"
    - "state:exists"
    - "state:clear"
    - "state:entity:create"
    - "state:entity:update"
    - "state:entity:delete"
    - "state:entity:get"
    - "state:entity:query"
    - "state:entity:bulk_create"
    
  "async_state:*":
    - "async_state:push"
    - "async_state:pop"
    - "async_state:peek"
    - "async_state:get"
    - "async_state:set"
    - "async_state:delete"
    - "async_state:queue_length"

# Claude tool mappings
# These are NOT events but map to capabilities
claude_tools:
  # Task management
  multi_agent_todo:
    description: "Shared task management"
    tools:
      - "TodoRead"
      - "TodoWrite"
      
  # File operations (Claude's built-in tools)
  file_access:
    description: "File system access via Claude tools"
    tools:
      - "Read"
      - "Write"
      - "Edit"
      - "MultiEdit"
      - "Grep"
      - "Glob"
      - "LS"
      - "NotebookRead"
      - "NotebookEdit"
      
  # System operations
  system_access:
    description: "System command execution"
    tools:
      - "Bash"
      - "Task"
    security_review: required
    
  # Network access
  network_access:
    description: "External API and web access"
    tools:
      - "WebFetch"
      - "WebSearch"
    security_review: required

# Security profiles that use these capabilities
security_profiles:
  restricted:
    description: "Minimal access for untrusted agents"
    capabilities:
      - "base"
      - "state_read"
    claude_tools:
      - "file_access"  # Read-only subset
      
  standard:
    description: "Default agent capabilities"
    capabilities:
      - "base"
      - "state_read"
      - "state_write"
      - "agent_messaging"
      - "conversation_management"
    claude_tools:
      - "file_access"
      - "multi_agent_todo"
      
  trusted:
    description: "Enhanced capabilities for trusted agents"
    capabilities:
      - "base"
      - "state_read"
      - "state_write"
      - "agent_messaging"
      - "spawn_agents"
      - "conversation_management"
      - "completion_management"
      - "system_monitoring"
    claude_tools:
      - "file_access"
      - "multi_agent_todo"
      - "system_access"
      
  orchestrator:
    description: "Full orchestration capabilities"
    inherits: "trusted"
    additional_capabilities:
      - "composition_access"
      - "permission_query"
      - "development_tools"
      
  researcher:
    description: "Research agent with web access"
    inherits: "standard"
    additional_claude_tools:
      - "network_access"